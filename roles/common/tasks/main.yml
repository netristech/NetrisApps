---
- name: Check if EPEL repo is already configured.
  stat: path={{ epel_repofile_path }}
  register: epel_repofile_result
 
- name: Install EPEL repo.
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  when: epel_repofile_result.stat.exists == False
 
- name: Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: epel_repofile_result.stat.exists == False
  
- name: Remove vsftpd if installed
  yum:
    name: vsftpd
    state: absent
  
- name: Install Common Packages
  yum:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
  - epel-release
  - python
  - MySQL-python
  - gcc
  - git
  - nano
  - tar
  - xz
  - openssh-server
  - fail2ban
  - python-simplejson
  - python-pip
  - python-backports-lzma
  
- name: Check for selinux
  stat:
    path: /etc/selinux/config
  register: selinux
  
- name: Disabled selinux if it exists
  selinux:
    state: disabled
  when: selinux.stat.exists == True
    
- name: Copy Config Files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items:
  - { src: 'sshd_config.j2', dest: '/etc/ssh/sshd_config', mode: '0600' }
  - { src: 'jail.local.j2', dest: '/etc/fail2ban/jail.local' }
  notify:
  - Restart SSH
  
- name: Set Service parameters
  service:
    name: "{{ item.name }}"
    enabled: "{{ item.enabled }}"
    state: "{{ item.state }}"
  with_items:
  - { name: 'fail2ban', enabled: 'yes', state: 'started' }
  - { name: 'sshd', enabled: 'yes', state: 'started' }
